#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# +------------------------------------------------------------------+
#
# This file is an addon for Check_MK.
# The official homepage for this check is at http://bitbucket.org/darkfader
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_areca_hba_ldisks(info):
    inventory = []

    # not sure why i end up with my info double stacked
    # but i'm sure it's me.
    for line in info[0]:
        if len(line) == 6:
            vsf_id, vsf_name, vsf_rsf, vsf_size, vsf_state, vsf_rbld = line
            inventory.append((vsf_id, None))
    return inventory

def check_areca_hba_ldisks(item, _no_params, info):
    for line in info[0]:
        vsf_id, vsf_name, vsf_rsf, vsf_size, vsf_state, vsf_rbld = line
        # Needs testing! maybe the vsf id's change if you delete an
        # intermittent vsf
        if vsf_id == item:
            state = 3
            msg = "%s is %s" % (vsf_name, vsf_state.lower())
            if    vsf_state == "Normal":
                state = 0
            elif  vsf_state == "Rebuilding":
                state = 1
                size_gb = int(vsf_size) / 1024
                # fully rebuilt = 0
                # 1% rebuilt    = 10
                # 99.9% done    = 999
                # a rebuild takes a few days, which would be sick.
                reb_gb  = size_gb * int(vsf_rbld) / 1000
                # I have a cold, no idea how to correctly float this boat.
                pct = int(vsf_rbld) / 10
                msg   = msg + " - %d%% (%d/%d GB) done" % (pct, reb_gb, size_gb)
            elif vsf_state =="Degraded":
                state = 1
            else:
                msg = msg + " - Unhandled state"
            return (state, msg)
 
    return (3, "UNKW - Volset not found in agent output")


check_info["areca_hba_ldisks"]  = {
    "check_function"      : check_areca_hba_ldisks,
    "inventory_function"  : inventory_areca_hba_ldisks,
    "has_perfdata"        : False,
    "service_description" : "Volume set %s",
    # Find Areca SAS MIB
    "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.18928.1"),
    "snmp_info"           : [(".1.3.6.1.4.1.18928.1.2.5.1.1", 
        # Below each enclosure there's the following structure for disk data
                                  [
          "1", # Volume Set id
          "2", # Volume Set name
          "3", # Underlying Raid Set
          "4", # Volume Set size
          "5", # Volume Set state
          "6", # Rebuild % (0=not rebuilding)
#          "7", # Unknown
#          "8", # Unknown
#          "9", # Unknown
#         "10", # Unknown
#         "11", # Raid level
#         "12", # Stripe size?
#         "13", # Number of underlying disks?
#         "14", # Unknown
#         "15", # Unknown
#         "16", # Incorrect data
#         "17", # Incorrect data
                                  ]
                            )],
}

